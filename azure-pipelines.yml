# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
  repositories:
    - repository: kustomize
      type: github
      endpoint: kubepia
      name: kubepia/sam-kustomize

name: $(Date:yyyyMMdd)$(Rev:.r)  

variables:
  # system.debug: true
  version: '$(Get-Date -Format yyyyMMddhhmmss).$(Build.BuildId)'
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'vrd-dockerhub'
  imageRepository: 'bekube/samstore'
  # containerRegistry: '12c40ee7eb904855b6858d38e2ed1f5a.azurecr.io'
  # '$(variables.version)'
  dockerfilePath: '**/Dockerfile'
  tag: $(Build.BuildNumber)
  # imagePullSecret: '12c40ee7eb904855b6858d38e2ed1f5a80298e43-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'



stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: self
      persistCredentials: true
    # - task: Bash@3
    #   displayName: create version string
    #   inputs:
    #     targetType: 'inline'
    #     script: |
    #       VERSION=$(date +%Y%m%d).$(Build.BuildId)
    #       echo "##vso[task.setvariable variable=tag;]$VERSION"
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Bash@3
      displayName: release tag in git
      inputs:
        targetType: 'inline'
        script: |
          echo $(Build.SourcesDirectory)
          echo $(ls -al)
          echo $(pwd)
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          git tag -a $(tag) -m "test"
          git push --tags
- stage: Deploy
  dependsOn: Build
  displayName: Deploy stage
  jobs: 
  - job: Deploy
    displayName: Deploy to k8s
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: kustomize
      persistCredentials: true
    - task: Bash@3
      displayName: release tag in git
      inputs:
        targetType: 'inline'
        workingDirectory: $(Build.SourcesDirectory)/overlays/dev
        script: |
          echo $(Build.SourcesDirectory)
          echo $(ls -al)
          kustomize edit set image $(imageRepository):$(tag)
          cat kustomization.yaml
        
